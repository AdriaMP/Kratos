###############################################################################
To be discussed
###############################################################################

IO Empire => doubleVector???

IO: use name of solver + coupling-interface-data as identifier in communication

change name of settings being passed around in solver wrapper => has a subkey that is also called "settings"
    => rename to Parameters

think if the import/export in the synchronize can mess up the other classes (predictor, Acc, ConvCrit...)

App Import => Variables in CouplingInterfaceData => how will it look like with thy py-vars? => can this crash?

How to import/export data from external solvers => explicit, but how?


###############################################################################
Done discussing, to be implemented:
###############################################################################

IO => class or free fcts??? (probably class is better, otherwise the configuring of the IO is difficult.. And also e.g. we would not constantly open/close MPI-Ports)
    => Class

how to do the allocation => particle
    => Create MP in constructor

Sync with myself? => do we allow this?
    => yes, but then we have to check if it is done with same data (which would not make sense)

make all comm async ... => send first and then receive, probably best way to avoid deadlocks
=> can we make all communication async??? => yes


File-IO: Probably better to put files into a folder
    - If multiple external solvers are participating it is easier to keep track / avoid potential miscommunication
    - Should always be deleted at the beginning of a new simulation (and restart), otherwise old files might be read => much easier if files are inside a folder, then the IO can easily do it.
    => do this



###############################################################################
Completely done (implemented and merged into Master)
###############################################################################
