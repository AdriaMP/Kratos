//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Jordi Cotela
//

#include "fluid_dynamics_application_variables.h"
#include "custom_utilities/statistics_data.h"
#include "custom_utilities/statistics_record.h"

namespace Kratos
{
KRATOS_CREATE_VARIABLE(int,PATCH_INDEX)
KRATOS_CREATE_VARIABLE(double,TAUONE)
KRATOS_CREATE_VARIABLE(double,TAUTWO)
KRATOS_CREATE_VARIABLE(double,PRESSURE_MASSMATRIX_COEFFICIENT)
KRATOS_CREATE_VARIABLE(Vector, FLUID_STRESS)
KRATOS_CREATE_VARIABLE(double, DIVERGENCE)
KRATOS_CREATE_VARIABLE(double, AUX_DISTANCE)

//KRATOS_CREATE_VARIABLE(double,Y_WALL)
KRATOS_CREATE_VARIABLE(double,SUBSCALE_PRESSURE)
KRATOS_CREATE_VARIABLE(double, C_DES)
//    KRATOS_CREATE_VARIABLE(double, C_SMAGORINSKY)
KRATOS_CREATE_VARIABLE(double, CHARACTERISTIC_VELOCITY)


KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(SUBSCALE_VELOCITY)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(COARSE_VELOCITY)

KRATOS_CREATE_VARIABLE(double,FIC_BETA)

// Adjoint variables
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_1)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_2)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(ADJOINT_FLUID_VECTOR_3)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(AUX_ADJOINT_FLUID_VECTOR_1)
KRATOS_CREATE_VARIABLE(double, ADJOINT_FLUID_SCALAR_1)

// Non-Newtonian constitutive relations
KRATOS_CREATE_VARIABLE(double, REGULARIZATION_COEFFICIENT)

KRATOS_CREATE_VARIABLE(double, BINGHAM_SMOOTHER)
KRATOS_CREATE_VARIABLE(double, GEL_STRENGTH )

// Q-Criterion (for vortex visualization)
KRATOS_CREATE_VARIABLE(double, Q_VALUE)

// Vorticity
KRATOS_CREATE_VARIABLE(double, VORTICITY_MAGNITUDE)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(RECOVERED_PRESSURE_GRADIENT)

// For swimming DEM
KRATOS_CREATE_VARIABLE(Vector, NODAL_WEIGHTS)

// Embedded fluid variables
KRATOS_CREATE_VARIABLE(int, EMBEDDED_IS_ACTIVE)
KRATOS_CREATE_VARIABLE(double, SLIP_LENGTH)
KRATOS_CREATE_VARIABLE(double, PENALTY_COEFFICIENT)
KRATOS_CREATE_VARIABLE(double, EMBEDDED_WET_PRESSURE)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(EMBEDDED_WET_VELOCITY)

// Compressible fluid variables
KRATOS_CREATE_VARIABLE(double, HEAT_CAPACITY_RATIO)
KRATOS_CREATE_VARIABLE(double, REACTION_DENSITY)
KRATOS_CREATE_VARIABLE(double, REACTION_ENERGY)
KRATOS_CREATE_VARIABLE(double, MACH)

// Turbulence statistics
KRATOS_CREATE_VARIABLE( StatisticsRecord::Pointer, STATISTICS_CONTAINER)
KRATOS_CREATE_VARIABLE( StatisticsData, TURBULENCE_STATISTICS_DATA)
KRATOS_CREATE_VARIABLE( double, UPDATE_STATISTICS )

// Curvature
KRATOS_CREATE_VARIABLE( double, CURVATURE);

// Smoothing surface auxiliary distance
KRATOS_CREATE_VARIABLE( double, DISTANCE_AUX)
KRATOS_CREATE_VARIABLE( double, DISTANCE_AUX2)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(DISTANCE_GRADIENT_AUX)

// Parallel levelset distance calculator needs an AREA_VARIABLE_AUX
KRATOS_CREATE_VARIABLE( double, AREA_VARIABLE_AUX)

// A variable to check if node is on cut element (maybe in a layer farther for future!)
//KRATOS_CREATE_VARIABLE( double, IS_NEAR_CUT)

// Contact line calculation
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(NORMAL_VECTOR)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(TANGENT_VECTOR)
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS(CONTACT_VECTOR)
KRATOS_CREATE_VARIABLE( double, CONTACT_ANGLE)
KRATOS_CREATE_VARIABLE( double, CONTACT_VELOCITY)

// Enriched pressure is an array of NumNodes components defined for elements. Access it using Element.GetValue()
KRATOS_CREATE_VARIABLE( double, ENRICHED_PRESSURE_1)
KRATOS_CREATE_VARIABLE( double, ENRICHED_PRESSURE_2)
KRATOS_CREATE_VARIABLE( double, ENRICHED_PRESSURE_3)
KRATOS_CREATE_VARIABLE( double, ENRICHED_PRESSURE_4)

// Last known velocity and pressure to recalculate the last increment
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS( VELOCITY_STAR)
KRATOS_CREATE_VARIABLE( double, PRESSURE_STAR)

// Pressure gradient to calculate its jump over interface
KRATOS_CREATE_3D_VARIABLE_WITH_COMPONENTS( PRESSURE_GRADIENT_AUX)
}
