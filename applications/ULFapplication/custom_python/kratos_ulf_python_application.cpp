//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ \.
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:		 BSD License
//					 Kratos default license: kratos/license.txt
//
//  Main authors:    Pavel Ryzhakov
// System includes

#if defined(KRATOS_PYTHON)
// External includes
#include <pybind11/pybind11.h>


// Project includes
#include "includes/define.h"
#include "includes/define_python.h"
#include "ULF_application.h"
#include "custom_python/add_custom_strategies_to_python.h"
#include "custom_python/add_custom_utilities_to_python.h"
#include "custom_python/add_processes_to_python.h"


namespace Kratos
{

namespace Python
{

using namespace pybind11;


PYBIND11_MODULE(KratosULFApplication,m)
{

    class_<KratosULFApplication,
           KratosULFApplication::Pointer,
           KratosApplication>(m,"KratosULFApplication")
           .def(init<>())
           ;
    AddCustomUtilitiesToPython(m);
    //AddCustomIOToPython();
    AddCustomStrategiesToPython(m);
    AddProcessesToPython(m);

    //registering variables in python

    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,VAUX);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,PRESSURE_FORCE);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,DISP_FRAC);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,TAUONE);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,TAUTWO);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,NODAL_LENGTH);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,MEAN_CURVATURE_2D);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,TRIPLE_POINT);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,CONTACT_ANGLE );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,CONTACT_ANGLE_STATIC );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,SURFACE_TENSION_COEF );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,MEAN_CURVATURE_3D );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,GAUSSIAN_CURVATURE );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,PRINCIPAL_CURVATURE_1 );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,PRINCIPAL_CURVATURE_2 );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,SUBSCALE_VELOCITY);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,VISCOUS_STRESSX );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,VISCOUS_STRESSY );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,VISCOUS_STRESSZ ); 
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,PRINCIPAL_DIRECTION_1 ); 
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,PRINCIPAL_DIRECTION_2 );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,NORMAL_GEOMETRIC );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,ADHESION_FORCE );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,NORMAL_EQUILIBRIUM );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,NORMAL_CONTACT_LINE_EQUILIBRIUM );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,NORMAL_TRIPLE_POINT );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,NORMAL_CONTACT_LINE );
//     KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,SOLID_FRACTION_GRADIENT );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE( m,SOLID_FRACTION_GRADIENT_PROJECTED );
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,SUBSCALE_PRESSURE);

    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,DISSIPATIVE_FORCE_COEFF_JM);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,DISSIPATIVE_FORCE_COEFF_SM);
    KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,DISSIPATIVE_FORCE_COEFF_BM);
//     KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,SOLID_LIQIUD_SURFTENS_COEFF);
//     KRATOS_REGISTER_IN_PYTHON_VARIABLE(m,SOLID_AIR_SURFTENS_COEFF);

 
}


}  // namespace Python.

}  // namespace Kratos.

#endif // KRATOS_PYTHON defined
