from __future__ import print_function, absolute_import, division
import KratosMultiphysics
import KratosMultiphysics.IgaApplication as KratosIGA
import KratosMultiphysics.KratosUnittest as KratosUnittest

class TestTriangulation(KratosUnittest.TestCase):
    def test_basic_triangulation(self):

        
        model = KratosMultiphysics.Model()
        iga_model_part =  model.CreateModelPart("IgaModelPart")

        

        with open("geometry.json",'r') as geometry_file:
            iga_geometry_parameters = KratosMultiphysics.Parameters( geometry_file.read())

        iga_geometry_reader = KratosIGA.BrepJsonIO()

        embedded_iga_modeler = KratosIGA.EmbeddedIgaModeler(iga_model_part)
        embedded_iga_modeler.ImportGeometry(iga_geometry_reader, iga_geometry_parameters)
        
        reference_results = [[2.7713553255020362, 1.2413776954420173], [3.75, 0.0], [3.406153099390143, 1.4600332572954393], [0.0, 0.6836485039400402], [0.0, 0.0], [0.70448536126865, 0.7827432658695289], [8.52617171724322, 3.378537126960661], [7.96505190663491, 5.0], [7.418347442699385, 4.416497492122786], [1.25, 0.0], [2.5, 0.0], [1.4107307845723192, 0.9051298418674958], [0.70448536126865, 0.7827432658695289], [1.25, 0.0], [1.4107307845723192, 0.9051298418674958], [9.132376801965549, 4.08287410522921], [10.0, 5.0], [8.982525953317456, 5.0], [7.051716461040787, 1.6768282795951746], [8.095760432179137, 2.2618399474032707], [7.5623805292516, 3.1087176679973227], [4.375, 0.7824571435619733], [3.75, 0.0], [5.0, 0.0], [5.0, 0.0], [6.25, 0.0], [5.821751665560676, 1.2348222807943887], [3.75, 0.0], [4.375, 0.7824571435619733], [3.406153099390143, 1.4600332572954393], [3.75, 0.0], [2.7713553255020362, 1.2413776954420173], [2.5, 0.0], [6.875, 0.7312486366955085], [8.125, 1.0654238355025676], [7.051716461040787, 1.6768282795951746], [9.132376801965549, 4.08287410522921], [7.96505190663491, 5.0], [8.52617171724322, 3.378537126960661], [0.70448536126865, 0.7827432658695289], [0.0, 0.0], [1.25, 0.0], [1.4107307845723192, 0.9051298418674958], [2.5, 0.0], [2.103508001461179, 1.0568356701512598], [5.821751665560676, 1.2348222807943887], [4.558284195802144, 1.9952216530689135], [4.375, 0.7824571435619733], [5.072267373364987, 2.3055491352480537], [5.821751665560676, 1.2348222807943887], [5.681904794197063, 2.7428147747867073], [6.25, 0.0], [7.5, 0.0], [6.875, 0.7312486366955085], [4.375, 0.7824571435619733], [4.558284195802144, 1.9952216530689135], [4.002699142060996, 1.712110978432267], [9.08534591435507, 1.687459367005852], [9.073729703517365, 2.6216058849863666], [8.095760432179137, 2.2618399474032707], [5.0, 0.0], [5.821751665560676, 1.2348222807943887], [4.375, 0.7824571435619733], [7.051716461040787, 1.6768282795951746], [6.22799531912592, 3.2046354306827642], [5.681904794197063, 2.7428147747867073], [5.681904794197063, 2.7428147747867073], [5.821751665560676, 1.2348222807943887], [7.051716461040787, 1.6768282795951746], [6.871642978763861, 3.832994984245571], [7.5623805292516, 3.1087176679973227], [7.418347442699385, 4.416497492122786], [8.52617171724322, 3.378537126960661], [7.5623805292516, 3.1087176679973227], [8.095760432179137, 2.2618399474032707], [7.051716461040787, 1.6768282795951746], [7.5623805292516, 3.1087176679973227], [6.22799531912592, 3.2046354306827642], [6.25, 0.0], [6.875, 0.7312486366955085], [5.821751665560676, 1.2348222807943887], [2.5, 0.0], [2.7713553255020362, 1.2413776954420173], [2.103508001461179, 1.0568356701512598], [5.072267373364987, 2.3055491352480537], [4.558284195802144, 1.9952216530689135], [5.821751665560676, 1.2348222807943887], [3.406153099390143, 1.4600332572954393], [4.375, 0.7824571435619733], [4.002699142060996, 1.712110978432267], [8.125, 1.0654238355025676], [6.875, 0.7312486366955085], [7.5, 0.0], [5.821751665560676, 1.2348222807943887], [6.875, 0.7312486366955085], [7.051716461040787, 1.6768282795951746], [8.75, 0.0], [10.0, 0.0], [10.0, 1.0], [7.5, 0.0], [8.75, 0.0], [8.125, 1.0654238355025676], [10.0, 1.0], [9.08534591435507, 1.687459367005852], [8.75, 0.0], [8.125, 1.0654238355025676], [9.08534591435507, 1.687459367005852], [8.095760432179137, 2.2618399474032707], [7.051716461040787, 1.6768282795951746], [8.125, 1.0654238355025676], [8.095760432179137, 2.2618399474032707], [8.75, 0.0], [9.08534591435507, 1.687459367005852], [8.125, 1.0654238355025676], [7.418347442699385, 4.416497492122786], [7.5623805292516, 3.1087176679973227], [8.52617171724322, 3.378537126960661], [6.22799531912592, 3.2046354306827642], [7.5623805292516, 3.1087176679973227], [6.871642978763861, 3.832994984245571], [10.0, 1.0], [10.0, 2.5], [9.08534591435507, 1.687459367005852], [9.073729703517365, 2.6216058849863666], [9.08534591435507, 1.687459367005852], [10.0, 2.5], [10.0, 3.75], [9.073729703517365, 2.6216058849863666], [10.0, 2.5], [8.095760432179137, 2.2618399474032707], [9.073729703517365, 2.6216058849863666], [8.52617171724322, 3.378537126960661], [10.0, 5.0], [9.132376801965549, 4.08287410522921], [10.0, 3.75], [10.0, 3.75], [9.132376801965549, 4.08287410522921], [9.073729703517365, 2.6216058849863666], [9.132376801965549, 4.08287410522921], [8.52617171724322, 3.378537126960661], [9.073729703517365, 2.6216058849863666], [7.96505190663491, 5.0], [9.132376801965549, 4.08287410522921], [8.982525953317456, 5.0]]


        current_result = embedded_iga_modeler.PrintParametricTriangulation()
        self.assertEqual(len(current_result), len(reference_results))

        for reference_result, current_result in zip(reference_results, current_result):
            self.assertAlmostEqual(reference_result, current_result)


if __name__ == '__main__':
    KratosUnittest.main()
