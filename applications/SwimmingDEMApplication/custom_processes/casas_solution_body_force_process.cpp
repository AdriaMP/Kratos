//    |  /           |
//    ' /   __| _` | __|  _ \   __|
//    . \  |   (   | |   (   |\__ `
//   _|\_\_|  \__,_|\__|\___/ ____/
//                   Multi-Physics
//
//  License:         BSD License
//                   Kratos default license: kratos/license.txt
//
//  Main authors:    Joaquin Gonzalez-Usua
//
//

// System includes

#include <math.h>
// External includes

// Project includes
#include "utilities/openmp_utils.h"
#include "containers/model.h"
#include "includes/checks.h"
#include "utilities/variable_utils.h"

// Application includes
#include "swimming_DEM_application.h"
#include "casas_solution_body_force_process.h"
#include "swimming_dem_application_variables.h"

namespace Kratos
{

/* Public functions *******************************************************/
CasasSolutionBodyForceProcess::CasasSolutionBodyForceProcess(
    ModelPart& rModelPart,
    const double Period,
    const double Density,
    const double Viscosity,
    const double Alpha0,
    const double DeltaAlpha,
    const double AlphaMin,
    const double Centerx1,
    const double Centerx2)
    : Process(),
      mrModelPart(rModelPart)
{
    // Member variables initialization
    mPeriod = Period;
    mDensity = Density;
    mViscosity = Viscosity;
    mAlpha0 = Alpha0;
    mDeltaAlpha = DeltaAlpha;
    mAlphaMin = AlphaMin;
    mPeriod =  Period;
    mCenterx1 = Centerx1;
    mCenterx2 = Centerx2;

}

CasasSolutionBodyForceProcess::CasasSolutionBodyForceProcess(
    ModelPart& rModelPart,
    Parameters& rParameters)
    : Process(),
      mrModelPart(rModelPart)
{
    // Check default settings
    this->CheckDefaultsAndProcessSettings(rParameters);
}

CasasSolutionBodyForceProcess::CasasSolutionBodyForceProcess(
    Model &rModel,
    Parameters &rParameters)
    : Process(),
      mrModelPart(rModel.GetModelPart(rParameters["model_part_name"].GetString()))
{
    // Check default settings
    this->CheckDefaultsAndProcessSettings(rParameters);

}


void CasasSolutionBodyForceProcess::CheckDefaultsAndProcessSettings(Parameters &rParameters)
{
    Parameters default_parameters( R"(
    {
                "model_part_name"          : "please_specify_model_part_name",
                "variable_name"            : "BODY_FORCE",
                "benchmark_name"           : "custom_body_force.vortex",
                "benchmark_parameters"     : {
                                                "velocity"    : 1.0,
                                                "length"      : 1.0,
                                                "viscosity"   : 0.1,
                                                "density"     : 1.0,
                                                "frequency"   : 1.0,
                                                "damping"     : 1.0,
                                                "alpha0"      : 0.7,
                                                "alpha_min"   : 0.5,
                                                "period"      : 0.1,
                                                "center_x1"   : 0.0,
                                                "center_x2"   : 0.0
                },
                "compute_nodal_error"      : true,
                "print_convergence_output" : false,
                "output_parameters"        : {}
    }  )" );

    rParameters.ValidateAndAssignDefaults(default_parameters);

    mPeriod    = rParameters["benchmark_parameters"]["period"].GetDouble();
    mDensity   = rParameters["benchmark_parameters"]["density"].GetDouble();
    mViscosity = rParameters["benchmark_parameters"]["viscosity"].GetDouble();
    mAlpha0    = rParameters["benchmark_parameters"]["alpha0"].GetDouble();
    mAlphaMin  = rParameters["benchmark_parameters"]["alpha_min"].GetDouble();
    mCenterx1  = rParameters["benchmark_parameters"]["center_x1"].GetDouble();
    mCenterx2  = rParameters["benchmark_parameters"]["center_x2"].GetDouble();

    mDeltaAlpha = std::min(mAlpha0 - mAlphaMin, 1.0 - mAlpha0);
    mOmega = 2 * M_PI / mPeriod;
}

void CasasSolutionBodyForceProcess::Execute()
{
    this->ExecuteInitialize();
    this->ExecuteInitializeSolutionStep();
}

void CasasSolutionBodyForceProcess::ExecuteInitialize()
{}

void CasasSolutionBodyForceProcess::ExecuteBeforeSolutionLoop() 
{
    this->SetInitialBodyForceAndPorosityField();
}

void CasasSolutionBodyForceProcess::ExecuteInitializeSolutionStep() 
{
    this->SetBodyForceAndPorosityField();
}

void CasasSolutionBodyForceProcess::ExecuteFinalizeSolutionStep() {}

/* Protected functions ****************************************************/

void CasasSolutionBodyForceProcess::SetInitialBodyForceAndPorosityField() {

    const double time = mrModelPart.GetProcessInfo()[TIME];
    const double delta_alpha = mDeltaAlpha;
    const double omega = mOmega;
    const double centerx1 = mCenterx1;
    const double centerx2 = mCenterx2;
    const double alpha0 = mAlpha0;
    const double rho = mDensity;
    const double nu = mViscosity;

    // BodyForce and Porosity fields at time 0.0
    #pragma omp parallel for
    for (int i_node = 1; i_node <= static_cast<int>(mrModelPart.NumberOfNodes()); ++i_node){
            int it_node = i_node;

            const double x1 = mrModelPart.GetNode(it_node).X();
            const double x2 = mrModelPart.GetNode(it_node).Y();

            const double alpha = alpha0 + delta_alpha*sin(omega*time + asin((x2 - centerx2) / sqrt(pow(x1 - centerx1, 2) + pow(x2 - centerx2, 2))));

            const double alpha1 =  delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5));

            const double alpha2 = delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1);

    	    const double dalphat =delta_alpha*omega*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))));

            const double u1 = (-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double u2 = (-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du1dt = -delta_alpha*omega*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2) + (0.5*delta_alpha*pow(omega,2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) - 100*M_PI*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*sin(M_PI*time) - 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du2dt = -delta_alpha*omega*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2) + (0.5*delta_alpha*pow(omega,2)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) - 100*M_PI*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*sin(M_PI*time) - 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du11 = -delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + (-0.5*delta_alpha*omega*(-centerx1 + x1)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.5*delta_alpha*omega*(centerx1 - x1)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.25*delta_alpha*omega*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*(-2*centerx1 + 2*x1)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*(-2*centerx1 + 2*x1 - 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du12 = -delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) + (-0.5*delta_alpha*omega*(-centerx2 + x2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) - 0.5*delta_alpha*omega*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 0.5*delta_alpha*omega*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*pow(centerx1 - x1 + 1, 2)*(200*(-2*centerx2 + 2*x2)*(-2*centerx2 + 2*x2 - 2) + 200*pow(-centerx2 + x2, 2) + 200*pow(centerx2 - x2 + 1, 2))*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du122 = 2*pow(delta_alpha, 2)*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*pow(cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))),2)/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 3)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - delta_alpha*((-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)) + delta_alpha*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - 2*delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*(-centerx2 + x2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) - 0.5*delta_alpha*omega*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 0.5*delta_alpha*omega*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*pow(centerx1 - x1 + 1, 2)*(200*(-2*centerx2 + 2*x2)*(-2*centerx2 + 2*x2 - 2) + 200*pow(-centerx2 + x2, 2) + 200*pow(centerx2 - x2 + 1, 2))*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - delta_alpha*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*((-centerx2 + x2)*(centerx2 - x2)*(3*centerx2 - 3*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5) - (-centerx2 + x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 2*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) + (-0.5*delta_alpha*omega*(-centerx2 + x2)*(centerx2 - x2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) - 1.0*delta_alpha*omega*(-centerx2 + x2)*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + 1.0*delta_alpha*omega*(-centerx2 + x2)*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) - 0.5*delta_alpha*omega*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5) + 0.5*delta_alpha*omega*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) - 0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.5*delta_alpha*omega*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*((-centerx2 + x2)*(centerx2 - x2)*(3*centerx2 - 3*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5) - (-centerx2 + x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 2*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 0.5*delta_alpha*omega*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) - 0.5*delta_alpha*omega*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*(-(-2*centerx2 + 2*x2)*(2*centerx2 - 2*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)*(4*centerx2 - 4*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + pow(-centerx2 + x2, 2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2) - 1/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 100*pow(-centerx1 + x1, 2)*pow(centerx1 - x1 + 1, 2)*(-2400*centerx2 + 2400*x2 - 1200)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du111 = 2*pow(delta_alpha, 2)*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*pow(cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))),2)/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 3)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + delta_alpha*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) - delta_alpha*(centerx1 - x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 3)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(2*pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 3.5)) - delta_alpha*(centerx1 - x1)*(3*centerx1 - 3*x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 2*delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*(-centerx1 + x1)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.5*delta_alpha*omega*(centerx1 - x1)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.25*delta_alpha*omega*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*(-2*centerx1 + 2*x1)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*(-2*centerx1 + 2*x1 - 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + delta_alpha*(-centerx2 + x2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + (0.5*delta_alpha*omega*(-centerx1 + x1)*(centerx1 - x1)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2) - 0.5*delta_alpha*omega*(-centerx1 + x1)*(centerx1 - x1)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 0.25*delta_alpha*omega*(-centerx1 + x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) + 0.5*delta_alpha*omega*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 0.25*delta_alpha*omega*(centerx1 - x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 3)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/((-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + 0.5*delta_alpha*omega*(centerx1 - x1)*(2*centerx1 - 2*x1)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2) + 0.125*delta_alpha*omega*pow(2*centerx1 - 2*x1, 2)*pow(-centerx2 + x2, 4)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 3.5)) + 0.25*delta_alpha*omega*(2*centerx1 - 2*x1)*(3*centerx1 - 3*x1)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 0.5*delta_alpha*omega*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) - 0.5*delta_alpha*omega*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) - 0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 200*(-2*centerx1 + 2*x1)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*(-2*centerx1 + 2*x1 - 2)*exp(-time)*cos(M_PI*time) + 200*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*exp(-time)*cos(M_PI*time) + 200*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du22 = -delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) + (0.5*delta_alpha*omega*(-centerx2 + x2)*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) - 0.5*delta_alpha*omega*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*(-2*centerx2 + 2*x2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*(-2*centerx2 + 2*x2 - 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du222 = 2*pow(delta_alpha, 2)*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*pow(cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))),2)/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 3)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - delta_alpha*((-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)) + delta_alpha*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - 2*delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(0.5*delta_alpha*omega*(-centerx2 + x2)*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) - 0.5*delta_alpha*omega*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*(-2*centerx2 + 2*x2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*(-2*centerx2 + 2*x2 - 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - delta_alpha*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*((-centerx2 + x2)*(centerx2 - x2)*(3*centerx2 - 3*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5) - (-centerx2 + x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 2*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) + (0.5*delta_alpha*omega*(-centerx2 + x2)*((-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5) + 0.5*delta_alpha*omega*(-centerx2 + x2)*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 0.5*delta_alpha*omega*(-centerx2 + x2)*((-centerx2 + x2)*(centerx2 - x2)*(3*centerx2 - 3*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5) - (-centerx2 + x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 2*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 1.0*delta_alpha*omega*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 200*(-2*centerx2 + 2*x2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*(-2*centerx2 + 2*x2 - 2)*exp(-time)*cos(M_PI*time) + 200*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*exp(-time)*cos(M_PI*time) + 200*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du21 = -delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + (0.5*delta_alpha*omega*(centerx1 - x1)*pow(-centerx2 + x2, 2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*pow(-centerx2 + x2, 2)*pow(centerx2 - x2 + 1, 2)*(-200*(-2*centerx1 + 2*x1)*(-2*centerx1 + 2*x1 - 2) - 200*pow(-centerx1 + x1, 2) - 200*pow(centerx1 - x1 + 1, 2))*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du211 = 2*pow(delta_alpha, 2)*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*pow(cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))),2)/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 3)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + delta_alpha*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) - delta_alpha*(centerx1 - x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 3)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(2*pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 3.5)) - delta_alpha*(centerx1 - x1)*(3*centerx1 - 3*x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 2*delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*(0.5*delta_alpha*omega*(centerx1 - x1)*pow(-centerx2 + x2, 2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*pow(-centerx2 + x2, 2)*pow(centerx2 - x2 + 1, 2)*(-200*(-2*centerx1 + 2*x1)*(-2*centerx1 + 2*x1 - 2) - 200*pow(-centerx1 + x1, 2) - 200*pow(centerx1 - x1 + 1, 2))*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + delta_alpha*(-centerx2 + x2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + (0.5*delta_alpha*omega*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 3)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/((-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + 0.25*delta_alpha*omega*(centerx1 - x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 4)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 3.5)) + 0.5*delta_alpha*omega*(centerx1 - x1)*(3*centerx1 - 3*x1)*pow(-centerx2 + x2, 2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 0.5*delta_alpha*omega*pow(-centerx2 + x2, 2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*pow(-centerx2 + x2, 2)*(2400*centerx1 - 2400*x1 + 1200)*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double convective1 = u1 * du11 + u2 * du12; 
            const double convective2 = u1 * du21 + u2 * du22;
            
            const double laplacian1 = du111 + du122;
            const double laplacian2 = du211 + du222;

            const double press_grad1 = 0.0;
            const double press_grad2 = 0.0;

            const double body_force1 = du1dt + convective1 + 1/rho * press_grad1 - nu * laplacian1;
            const double body_force2 = du2dt + convective2 + 1/rho * press_grad2 - nu * laplacian2;

            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(VELOCITY_X) = u1;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(VELOCITY_Y) = u2;

            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(FLUID_FRACTION)      = alpha;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(FLUID_FRACTION_RATE) = dalphat;
            
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(FLUID_FRACTION_GRADIENT_X) = alpha1;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(FLUID_FRACTION_GRADIENT_Y) = alpha2;

            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(BODY_FORCE_X) = body_force1;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(BODY_FORCE_Y) = body_force2;

            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(EXACT_VELOCITY_X) = u1;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(EXACT_VELOCITY_Y) = u2;
        }

}

void CasasSolutionBodyForceProcess::SetBodyForceAndPorosityField() {

    const double time = mrModelPart.GetProcessInfo()[TIME];
    const double delta_alpha = mDeltaAlpha;
    const double omega = mOmega;
    const double centerx1 = mCenterx1;
    const double centerx2 = mCenterx2;
    const double alpha0 = mAlpha0;
    const double rho = mDensity;
    const double nu = mViscosity;

    // Computation of the BodyForce and Porosity fields
    #pragma omp parallel for
    for (int i_node = 1; i_node <= static_cast<int>(mrModelPart.NumberOfNodes()); ++i_node){
            int it_node = i_node;
            const double x1 = mrModelPart.GetNode(it_node).X();
            const double x2 = mrModelPart.GetNode(it_node).Y();

            const double alpha = alpha0 + delta_alpha*sin(omega*time + asin((x2 - centerx2) / sqrt(pow(x1 - centerx1, 2) + pow(x2 - centerx2, 2))));

            const double alpha1 =  delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5));

            const double alpha2 = delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1);

    	    const double dalphat =delta_alpha*omega*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))));

            const double u1 = (-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double u2 = (-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du1dt = -delta_alpha*omega*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2) + (0.5*delta_alpha*pow(omega,2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) - 100*M_PI*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*sin(M_PI*time) - 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du2dt = -delta_alpha*omega*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2) + (0.5*delta_alpha*pow(omega,2)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) - 100*M_PI*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*sin(M_PI*time) - 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du11 = -delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + (-0.5*delta_alpha*omega*(-centerx1 + x1)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.5*delta_alpha*omega*(centerx1 - x1)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.25*delta_alpha*omega*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*(-2*centerx1 + 2*x1)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*(-2*centerx1 + 2*x1 - 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du12 = -delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) + (-0.5*delta_alpha*omega*(-centerx2 + x2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) - 0.5*delta_alpha*omega*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 0.5*delta_alpha*omega*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*pow(centerx1 - x1 + 1, 2)*(200*(-2*centerx2 + 2*x2)*(-2*centerx2 + 2*x2 - 2) + 200*pow(-centerx2 + x2, 2) + 200*pow(centerx2 - x2 + 1, 2))*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du122 = 2*pow(delta_alpha, 2)*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*pow(cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))),2)/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 3)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - delta_alpha*((-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)) + delta_alpha*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - 2*delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*(-centerx2 + x2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) - 0.5*delta_alpha*omega*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 0.5*delta_alpha*omega*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*pow(centerx1 - x1 + 1, 2)*(200*(-2*centerx2 + 2*x2)*(-2*centerx2 + 2*x2 - 2) + 200*pow(-centerx2 + x2, 2) + 200*pow(centerx2 - x2 + 1, 2))*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - delta_alpha*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*((-centerx2 + x2)*(centerx2 - x2)*(3*centerx2 - 3*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5) - (-centerx2 + x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 2*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) + (-0.5*delta_alpha*omega*(-centerx2 + x2)*(centerx2 - x2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) - 1.0*delta_alpha*omega*(-centerx2 + x2)*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + 1.0*delta_alpha*omega*(-centerx2 + x2)*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) - 0.5*delta_alpha*omega*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5) + 0.5*delta_alpha*omega*(-(-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) - 0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.5*delta_alpha*omega*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*((-centerx2 + x2)*(centerx2 - x2)*(3*centerx2 - 3*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5) - (-centerx2 + x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 2*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 0.5*delta_alpha*omega*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) - 0.5*delta_alpha*omega*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*(-(-2*centerx2 + 2*x2)*(2*centerx2 - 2*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2) - pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)*(4*centerx2 - 4*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + pow(-centerx2 + x2, 2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2) - 1/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 100*pow(-centerx1 + x1, 2)*pow(centerx1 - x1 + 1, 2)*(-2400*centerx2 + 2400*x2 - 1200)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du111 = 2*pow(delta_alpha, 2)*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*pow(cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))),2)/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 3)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + delta_alpha*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) - delta_alpha*(centerx1 - x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 3)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(2*pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 3.5)) - delta_alpha*(centerx1 - x1)*(3*centerx1 - 3*x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 2*delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*(-centerx1 + x1)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.5*delta_alpha*omega*(centerx1 - x1)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 0.25*delta_alpha*omega*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*(-2*centerx1 + 2*x1)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*(-2*centerx1 + 2*x1 - 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + delta_alpha*(-centerx2 + x2)*(-0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + (0.5*delta_alpha*omega*(-centerx1 + x1)*(centerx1 - x1)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2) - 0.5*delta_alpha*omega*(-centerx1 + x1)*(centerx1 - x1)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 0.25*delta_alpha*omega*(-centerx1 + x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) + 0.5*delta_alpha*omega*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 0.25*delta_alpha*omega*(centerx1 - x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 3)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/((-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + 0.5*delta_alpha*omega*(centerx1 - x1)*(2*centerx1 - 2*x1)*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2) + 0.125*delta_alpha*omega*pow(2*centerx1 - 2*x1, 2)*pow(-centerx2 + x2, 4)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 3.5)) + 0.25*delta_alpha*omega*(2*centerx1 - 2*x1)*(3*centerx1 - 3*x1)*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 0.5*delta_alpha*omega*pow(-centerx2 + x2, 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) - 0.5*delta_alpha*omega*(-centerx2 + x2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) - 0.5*delta_alpha*omega*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 200*(-2*centerx1 + 2*x1)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*(-2*centerx1 + 2*x1 - 2)*exp(-time)*cos(M_PI*time) + 200*pow(-centerx1 + x1, 2)*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*exp(-time)*cos(M_PI*time) + 200*(100*(-2*centerx2 + 2*x2)*pow(centerx2 - x2 + 1, 2) + 100*pow(-centerx2 + x2, 2)*(-2*centerx2 + 2*x2 - 2))*pow(centerx1 - x1 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du22 = -delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) + (0.5*delta_alpha*omega*(-centerx2 + x2)*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) - 0.5*delta_alpha*omega*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*(-2*centerx2 + 2*x2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*(-2*centerx2 + 2*x2 - 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du222 = 2*pow(delta_alpha, 2)*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*pow(cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))),2)/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 3)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - delta_alpha*((-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)) + delta_alpha*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - 2*delta_alpha*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*(0.5*delta_alpha*omega*(-centerx2 + x2)*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) - 0.5*delta_alpha*omega*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*(-2*centerx2 + 2*x2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*(-2*centerx2 + 2*x2 - 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) - delta_alpha*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*((-centerx2 + x2)*(centerx2 - x2)*(3*centerx2 - 3*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5) - (-centerx2 + x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 2*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)) + (0.5*delta_alpha*omega*(-centerx2 + x2)*((-2*centerx2 + 2*x2)/(2*(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))) + pow(-centerx2 + x2, 2)*(2*centerx2 - 2*x2)/(2*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2)))*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5) + 0.5*delta_alpha*omega*(-centerx2 + x2)*pow((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)), 2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 0.5*delta_alpha*omega*(-centerx2 + x2)*((-centerx2 + x2)*(centerx2 - x2)*(3*centerx2 - 3*x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5) - (-centerx2 + x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 2*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 1.0*delta_alpha*omega*((-centerx2 + x2)*(centerx2 - x2)/pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5) + 1/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1) + 200*(-2*centerx2 + 2*x2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*(-2*centerx2 + 2*x2 - 2)*exp(-time)*cos(M_PI*time) + 200*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*exp(-time)*cos(M_PI*time) + 200*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du21 = -delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + (0.5*delta_alpha*omega*(centerx1 - x1)*pow(-centerx2 + x2, 2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*pow(-centerx2 + x2, 2)*pow(centerx2 - x2 + 1, 2)*(-200*(-2*centerx1 + 2*x1)*(-2*centerx1 + 2*x1 - 2) - 200*pow(-centerx1 + x1, 2) - 200*pow(centerx1 - x1 + 1, 2))*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double du211 = 2*pow(delta_alpha, 2)*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*pow(cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))),2)/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 3)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + delta_alpha*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) - delta_alpha*(centerx1 - x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 3)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(2*pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 3.5)) - delta_alpha*(centerx1 - x1)*(3*centerx1 - 3*x1)*(-centerx2 + x2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 2*delta_alpha*(centerx1 - x1)*(-centerx2 + x2)*(0.5*delta_alpha*omega*(centerx1 - x1)*pow(-centerx2 + x2, 2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*pow(-centerx2 + x2, 2)*pow(centerx2 - x2 + 1, 2)*(-200*(-2*centerx1 + 2*x1)*(-2*centerx1 + 2*x1 - 2) - 200*pow(-centerx1 + x1, 2) - 200*pow(centerx1 - x1 + 1, 2))*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + delta_alpha*(-centerx2 + x2)*(-0.5*delta_alpha*omega*(-centerx2 + x2)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))) + 100*pow(-centerx2 + x2, 2)*(-100*(-2*centerx1 + 2*x1)*pow(centerx1 - x1 + 1, 2) - 100*pow(-centerx1 + x1, 2)*(-2*centerx1 + 2*x1 - 2))*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))), 2)*sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + (0.5*delta_alpha*omega*pow(centerx1 - x1, 2)*pow(-centerx2 + x2, 3)*cos(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/((-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2),3)) + 0.25*delta_alpha*omega*(centerx1 - x1)*(2*centerx1 - 2*x1)*pow(-centerx2 + x2, 4)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(pow(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1, 1.5)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 3.5)) + 0.5*delta_alpha*omega*(centerx1 - x1)*(3*centerx1 - 3*x1)*pow(-centerx2 + x2, 2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 2.5)) - 0.5*delta_alpha*omega*pow(-centerx2 + x2, 2)*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2))))/(sqrt(-pow(-centerx2 + x2, 2)/(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)) + 1)*pow(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2), 1.5)) + 100*pow(-centerx2 + x2, 2)*(2400*centerx1 - 2400*x1 + 1200)*pow(centerx2 - x2 + 1, 2)*exp(-time)*cos(M_PI*time))/(alpha0 + delta_alpha*sin(omega*time + asin((-centerx2 + x2)/sqrt(pow(-centerx1 + x1, 2) + pow(-centerx2 + x2, 2)))));

            const double convective1 = u1 * du11 + u2 * du12; 
            const double convective2 = u1 * du21 + u2 * du22;
            
            const double laplacian1 = du111 + du122;
            const double laplacian2 = du211 + du222;

            const double press_grad1 = 0.0;
            const double press_grad2 = 0.0;

            const double body_force1 = du1dt + convective1 + 1/rho * press_grad1 - nu * laplacian1;
            const double body_force2 = du2dt + convective2 + 1/rho * press_grad2 - nu * laplacian2;
            const double body_force3 = 0.0;

            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(FLUID_FRACTION) = alpha;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(FLUID_FRACTION_RATE) = dalphat;
            
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(FLUID_FRACTION_GRADIENT_X) = alpha1;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(FLUID_FRACTION_GRADIENT_Y) = alpha2;

            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(BODY_FORCE_X) = body_force1;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(BODY_FORCE_Y) = body_force2;

            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(EXACT_VELOCITY_X) = u1;
            mrModelPart.GetNode(it_node).FastGetSolutionStepValue(EXACT_VELOCITY_Y) = u2;
        }

}



/* Private functions ****************************************************/

};  // namespace Kratos.
