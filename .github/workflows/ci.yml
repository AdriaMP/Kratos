name: CI

on:
  pull_request:
    branches:
      - master


jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build-type: [Custom]
        compiler: [gcc]
    env:
      KRATOS_BUILD_TYPE: ${{ matrix.build-type }}
      MKLVARS_ARCHITECTURE: intel64
      MKLVARS_INTERFACE: lp64

    container:
      image: kratosmultiphysics/kratos-image-ci-ubuntu-20-04:latest
      options: --user 1001
      env:
        CCACHE_SLOPPINESS: pch_defines,time_macros
        CCACHE_COMPILERCHECK: content
        CCACHE_COMPRESS: true
        CCACHE_NODISABLE: true
        CCACHE_MAXSIZE: 500M
        FC: gfortran-7

    steps:
    - uses: rokroskar/workflow-run-cleanup-action@v0.2.2
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

    - uses: actions/checkout@v2

    - name: Install lcov
      run: sudo apt-get install lcov

    - name: Cache Build
      id: cache-build
      uses: actions/cache@v1
      with:
        path: ~/.ccache
        key: ${{ runner.os }}-${{ matrix.build-type }}-${{ matrix.compiler }}-ccache-${{ github.sha }}
        restore-keys: ${{ runner.os }}-${{ matrix.build-type }}-${{ matrix.compiler }}-ccache-

    - name: Build
      run: |
        if [ ${{ matrix.compiler }} = gcc ]; then
          export CC=/usr/lib/ccache/gcc
          export CXX=/usr/lib/ccache/g++
          export KRATOS_CMAKE_OPTIONS_FLAGS="-DUSE_EIGEN_MKL=ON -DUSE_EIGEN_FEAST=ON"
          export KRATOS_CMAKE_CXX_FLAGS="-Wignored-qualifiers -Werror=ignored-qualifiers -Werror=suggest-override -Werror=unused-variable -Werror=misleading-indentation -Werror=return-type -Werror=sign-compare -Werror=unused-but-set-variable -Werror=unused-local-typedefs -Werror=reorder -Werror=maybe-uninitialized -fprofile-arcs -ftest-coverage -g"
        elif [ ${{ matrix.compiler }} = clang ]; then
          export CC=clang-9
          export CXX=clang++-9
          export KRATOS_CMAKE_CXX_FLAGS="-Werror=delete-non-abstract-non-virtual-dtor -Werror=extra-tokens -Werror=defaulted-function-deleted -Werror=potentially-evaluated-expression -Werror=instantiation-after-specialization -Werror=undefined-var-template"
        else
          echo 'Unsupported compiler: ${{ matrix.compiler }}'
          exit 1
        fi
        . /opt/intel/mkl/bin/mklvars.sh
        cp .github/workflows/configure.sh configure.sh
        bash configure.sh
        ccache -s

    - name: Running small tests
      run: |
        . /opt/intel/mkl/bin/mklvars.sh
        export PYTHONPATH=${PYTHONPATH}:${GITHUB_WORKSPACE}/bin/${{ matrix.build-type }}
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${GITHUB_WORKSPACE}/bin/${{ matrix.build-type }}/libs
        python3 kratos/python_scripts/run_tests.py -l small -c python3

    - name: Coverage
      run: |
        if [ ${{ matrix.compiler }} = gcc ]; then
          lcov --capture --directory ${GITHUB_WORKSPACE}/build/${{ matrix.build-type }} --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info
          curl -s https://codecov.io/bash > codecov.sh
          bash codecov.sh -t ${{secrets.CODECOV_TOKEN}} -f coverage.info || echo "Codecov did not collect coverage reports"
        fi